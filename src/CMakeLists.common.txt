ADD_EXECUTABLE(track-features
  track_features.cpp
  read_image.cpp
  track_list.cpp
  klt_tracker.cpp)
TARGET_LINK_LIBRARIES(track-features ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(track-features klt)

ADD_EXECUTABLE(track-features-bidirectional
  track_features_bidirectional.cpp
  read_image.cpp
  track_list.cpp
  klt_tracker.cpp)
TARGET_LINK_LIBRARIES(track-features-bidirectional ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(track-features-bidirectional klt)

ADD_EXECUTABLE(visualize-tracks
  visualize_tracks.cpp
  read_image.cpp
  track_list.cpp
  random_color.cpp)
TARGET_LINK_LIBRARIES(visualize-tracks ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(visualize-tracks gflags)

ADD_EXECUTABLE(visualize-all-tracks
  visualize_all_tracks.cpp
  read_image.cpp
  track_list.cpp
  random_color.cpp)
TARGET_LINK_LIBRARIES(visualize-all-tracks ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(visualize-all-tracks gflags)

ADD_EXECUTABLE(find-keypoints
  find_keypoints.cpp
  read_image.cpp
  keypoint.cpp)
TARGET_LINK_LIBRARIES(find-keypoints ${OpenCV_LIBS})

ADD_EXECUTABLE(visualize-keypoints
  visualize_keypoints.cpp
  read_image.cpp
  keypoint.cpp
  random_color.cpp)
TARGET_LINK_LIBRARIES(visualize-keypoints ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(visualize-keypoints gflags)

#ADD_EXECUTABLE(find-foreground-keypoints
#  find_foreground_keypoints.cpp
#  read_image.cpp)

ADD_EXECUTABLE(extract-sift-at-keypoints
  extract_sift_at_keypoints.cpp
  read_image.cpp
  keypoint.cpp
  descriptor.cpp)
TARGET_LINK_LIBRARIES(extract-sift-at-keypoints ${OpenCV_LIBS})

ADD_EXECUTABLE(extract-hog
  extract_hog.cpp
  read_image.cpp
  track_list.cpp
  keypoint.cpp
  descriptor.cpp)
TARGET_LINK_LIBRARIES(extract-hog ${OpenCV_LIBS})

ADD_EXECUTABLE(match-features
  match_features.cpp
  descriptor.cpp
  match.cpp)
TARGET_LINK_LIBRARIES(match-features ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(match-features gflags)

ADD_EXECUTABLE(visualize-matches
  visualize_matches.cpp
  match.cpp
  read_image.cpp
  keypoint.cpp
  draw_matches.cpp
  random_color.cpp)
TARGET_LINK_LIBRARIES(visualize-matches ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(visualize-matches gflags)

ADD_EXECUTABLE(adjacent-matches-to-tracks
  adjacent_matches_to_tracks.cpp
  match.cpp
  read_image.cpp
  keypoint.cpp
  track_list.cpp)
TARGET_LINK_LIBRARIES(adjacent-matches-to-tracks ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(adjacent-matches-to-tracks gflags)

ADD_EXECUTABLE(track-rigid
  track_rigid.cpp
  read_image.cpp
  flow.cpp
  rigid_warp.cpp
  rigid_feature.cpp
  random_color.cpp)
TARGET_LINK_LIBRARIES(track-rigid ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(track-rigid gflags)
TARGET_LINK_LIBRARIES(track-rigid glog)
TARGET_LINK_LIBRARIES(track-rigid ceres)
TARGET_LINK_LIBRARIES(track-rigid cxsparse)
TARGET_LINK_LIBRARIES(track-rigid cholmod ccolamd camd colamd amd)
TARGET_LINK_LIBRARIES(track-rigid ${LAPACK_LIB})

ADD_EXECUTABLE(track-rigid-bidir
  track_rigid_bidir.cpp
  read_image.cpp
  flow.cpp
  rigid_warp.cpp
  rigid_feature.cpp
  keypoint.cpp
  random_color.cpp)
TARGET_LINK_LIBRARIES(track-rigid-bidir ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(track-rigid-bidir gflags)
TARGET_LINK_LIBRARIES(track-rigid-bidir glog)
TARGET_LINK_LIBRARIES(track-rigid-bidir ceres)
TARGET_LINK_LIBRARIES(track-rigid-bidir cxsparse)
TARGET_LINK_LIBRARIES(track-rigid-bidir cholmod ccolamd camd colamd amd)
TARGET_LINK_LIBRARIES(track-rigid-bidir ${LAPACK_LIB})

ADD_EXECUTABLE(extract-sift-tracks
  extract_sift_tracks.cpp
  read_image.cpp
  rigid_feature.cpp
  rigid_warp.cpp
  descriptor.cpp
  sift.cpp)
TARGET_LINK_LIBRARIES(extract-sift-tracks ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(extract-sift-tracks gflags)
TARGET_LINK_LIBRARIES(extract-sift-tracks glog)

ADD_EXECUTABLE(test-extract-sift
  test_extract_sift.cpp
  read_image.cpp
  rigid_feature.cpp
  rigid_warp.cpp
  sift.cpp)
TARGET_LINK_LIBRARIES(test-extract-sift ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(test-extract-sift gflags)
TARGET_LINK_LIBRARIES(test-extract-sift glog)

ADD_EXECUTABLE(pca-descriptor
  pca_descriptor.cpp
  descriptor.cpp
  random_color.cpp)
TARGET_LINK_LIBRARIES(pca-descriptor ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(pca-descriptor gflags)
TARGET_LINK_LIBRARIES(pca-descriptor glog)

ADD_EXECUTABLE(select-most-active-tracks
  select_most_active_tracks.cpp
  rigid_feature.cpp)
TARGET_LINK_LIBRARIES(select-most-active-tracks ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(select-most-active-tracks gflags)
TARGET_LINK_LIBRARIES(select-most-active-tracks glog)

ADD_EXECUTABLE(visualize-rigid-tracks
  visualize_rigid_tracks.cpp
  rigid_feature.cpp
  rigid_warp.cpp
  read_image.cpp
  random_color.cpp)
TARGET_LINK_LIBRARIES(visualize-rigid-tracks ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(visualize-rigid-tracks gflags)
TARGET_LINK_LIBRARIES(visualize-rigid-tracks glog)

ADD_EXECUTABLE(track-rigid-test
  track_rigid_test.cpp
  read_image.cpp
  flow.cpp
  rigid_warp.cpp
  rigid_feature.cpp
  random_color.cpp)
TARGET_LINK_LIBRARIES(track-rigid-test ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(track-rigid-test gflags)
TARGET_LINK_LIBRARIES(track-rigid-test glog)
TARGET_LINK_LIBRARIES(track-rigid-test ceres)
TARGET_LINK_LIBRARIES(track-rigid-test cxsparse)
TARGET_LINK_LIBRARIES(track-rigid-test cholmod ccolamd camd colamd amd)
TARGET_LINK_LIBRARIES(track-rigid-test ${LAPACK_LIB})
